{"version":3,"sources":["utils/useInterval/index.js","pomodoro/BreakTime.js","pomodoro/FocusTime.js","pomodoro/Subtitle.js","pomodoro/Timer.js","utils/class-names/index.js","pomodoro/Pomodoro.js","App.js","index.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","BreakTime","breakDuration","increaseBreakTime","decreaseBreakTime","className","data-testid","substr","type","onClick","FocusTime","focusDuration","increaseFocusTime","decreaseFocusTime","Subtitle","aria","session","fmtMSS","label","toLowerCase","indexOf","timeRemaining","style","height","role","aria-valuemin","aria-valuemax","aria-valuenow","width","Timer","classNameToBoolean","playPause","isTimerRunning","stopButtonHandler","aria-label","title","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","disabled","nextTick","prevState","Math","max","s","Pomodoro","useState","setIsTimerRunning","setSession","elapsed","setElapsed","setFocusDuration","setBreakDuration","setAria","breakLeft","setBreakLeft","Audio","play","currentSession","nextSession","left","rel","href","integrity","crossorigin","lastFocusDuration","min","lastBreakDuration","nextState","prevStateSession","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecd14317.chunk.js","sourcesContent":["// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\n\nexport default function BreakTime({ breakDuration, increaseBreakTime, decreaseBreakTime }) {\n\n    return (\n        <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-break\">\n\n              {/* TODO: Update this text to display the current break session duration */}\n              Break Duration: {(\"0\" + breakDuration).substr(-2)}:00\n              </span>\n              <div className=\"input-group-append\">\n\n              {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-break\"\n                onClick={decreaseBreakTime}\n              >\n              <span className=\"oi oi-minus\" />\n              </button>\n\n              {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-break\"\n                onClick={increaseBreakTime}\n              >\n              <span className=\"oi oi-plus\" />\n              </button>\n              </div>\n            </div>\n  )\n}\n\n","import React from \"react\";\n\nexport default function FocusTime({ focusDuration, increaseFocusTime, decreaseFocusTime }) {\n\n    return (\n        <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n\n            {/* TODO: Update this text to display the current focus session duration */}\n            Focus Duration: {(\"0\" + focusDuration).substr(-2)}:00\n            </span>\n            <div className=\"input-group-append\">\n\n            {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n            <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            data-testid=\"decrease-focus\"\n            onClick={decreaseFocusTime}\n            >\n            <span className=\"oi oi-minus\" />\n            </button>\n\n            {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n            <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={increaseFocusTime}\n            >\n            <span className=\"oi oi-plus\" />\n            </button>\n            </div>\n        </div>\n    )\n}\n\n","import React from \"react\";\n\nexport default function Subtitle({ aria, session, focusDuration, breakDuration, fmtMSS }) {\n\n    return (\n        <div>\n\n            {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n            {session && (<div className=\"row mb-2\">\n            <div className=\"col\">\n\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n            <h2 data-testid=\"session-title\">\n            {session&&session.label} for {(\"0\" + (session.label.toLowerCase().indexOf(\"ocus\") > 0 ? focusDuration : breakDuration)).substr(-2)}:00 minutes\n            </h2>\n\n            {/* TODO: Update message below correctly format the time remaining in the current session */}            <p className=\"lead\" data-testid=\"session-sub-title\">\n            {session&&fmtMSS(session.timeRemaining)} remaining\n            </p>\n            </div>\n        </div>)}\n\n        {session&&<div className=\"row mb-2\">\n            <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n            <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={aria} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width:`${aria}%`}} // TODO: Increase width % as elapsed time increases\n            />\n            </div>\n            </div>\n            </div>}\n        </div>\n    )\n}\n","import React from \"react\";\nimport classNames from \"../utils/class-names\";\n\nexport default function Timer({ playPause, isTimerRunning, stopButtonHandler }) {\n  \n    return (\n    \n      <div\n        className=\"btn-group btn-group-lg mb-2\"\n        role=\"group\"\n        aria-label=\"Timer controls\"\n      >\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        data-testid=\"play-pause\"\n        title=\"Start or pause timer\"\n        onClick={playPause}\n      >\n      <span\n        className={classNames({\n        oi: true,\n        \"oi-media-play\": !isTimerRunning,\n        \"oi-media-pause\": isTimerRunning,\n        })}\n      />\n      </button>\n\n      {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n      {/* TODO: Disable the stop button when there is no active session */}\n      <button\n        type=\"button\"\n        disabled= {!isTimerRunning}\n        className=\"btn btn-secondary\"\n        data-testid=\"stop\"\n        title=\"Stop the session\"\n        onClick={stopButtonHandler}\n      >\n      <span className=\"oi oi-media-stop\" />\n      </button>\n    </div>\n    )\n}\n\n","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport BreakTime from \"./BreakTime\";\nimport FocusTime from \"./FocusTime\";\nimport Subtitle from \"./Subtitle\";\nimport Timer from \"./Timer\"; \n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\nfunction fmtMSS(s){return(s-(s%=60))/60+(9<s?':':':0')+s}\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\n\nexport default function Pomodoro() {\n  \n  //State\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [session, setSession] = useState(null);\n  const [elapsed, setElapsed] = useState(0)\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [aria, setAria] = useState(0);\n  const [breakLeft, setBreakLeft] = useState(0);\n  \n  \n  //Handlers\n  const increaseFocusTime = () => {\n    setFocusDuration((lastFocusDuration) => Math.min(60, lastFocusDuration + 5));\n  }\n\n  \n  const decreaseFocusTime = () => {\n    setFocusDuration((lastFocusDuration) => Math.max(5, lastFocusDuration - 5));\n  }\n\n  \n  const increaseBreakTime = () => {\n    setBreakDuration((lastBreakDuration) => Math.min(15, lastBreakDuration + 1));\n  }\n\n  \n  const decreaseBreakTime = () => {\n    setBreakDuration((lastBreakDuration) => Math.max(1, lastBreakDuration - 1));\n  }\n\n  \n  const stopButtonHandler = () => {\n    setSession(null);\n    setIsTimerRunning(false);\n    setElapsed(0);\n  }\n  \n  \n  useInterval(() => {\n      setBreakLeft(breakLeft + 1)\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        setSession(nextSession(focusDuration, breakDuration));\n      }\n      setSession(nextTick);    \n    const left = session.timeRemaining\n    if(session.label === \"Focusing\") {\n      setAria(100*(focusDuration * 60 - left)/(focusDuration*60))\n    } else {\n      setAria(100*(breakDuration * 60 - left)/(breakDuration*60))\n    }\n    }, \n    isTimerRunning ? 1000 : null\n  );\n  \n\n useInterval(()=> {\n   if(session && session.timeRemaining) {\n     return setElapsed(elapsed + 1)\n   }\n }, 1000)\n\n  \n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n\n  \n  return (\n    <div className=\"pomodoro\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"\n        integrity=\"sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z\"\n        crossorigin=\"anonymous\"\n      />\n      <link\n        rel=\"stylesheet\"\n        href=\"https://cdnjs.cloudflare.com/ajax/libs/open-iconic/1.1.1/font/css/open-iconic-bootstrap.min.css\"\n        integrity=\"sha512-UyNhw5RNpQaCai2EdC+Js0QL4RlVmiq41DkmCJsRV3ZxipG2L0HhTqIf/H9Hp8ez2EnFlkBnjRGJU2stW3Lj+w==\"\n        crossorigin=\"anonymous\"\n      />\n      <div className=\"row\">\n        <div className=\"col\">\n          <FocusTime\n            focusDuration={focusDuration} \n            increaseFocusTime={increaseFocusTime}\n            decreaseFocusTime={decreaseFocusTime}\n          />\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <BreakTime \n              breakDuration={breakDuration}\n              increaseBreakTime={increaseBreakTime}\n              decreaseBreakTime={decreaseBreakTime}\n          />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <Timer \n            playPause={playPause}\n            isTimerRunning={isTimerRunning}\n            stopButtonHandler={stopButtonHandler}\n          />\n        </div>\n      </div>\n      <Subtitle \n        aria={aria}\n        session={session}\n        focusDuration={focusDuration}\n        breakDuration={breakDuration}\n        fmtMSS={fmtMSS}\n      />\n    </div>\n  );\n}\n\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}